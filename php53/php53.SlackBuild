#!/bin/sh

# Build and package mod_php on Slackware.
# by:  David Cantrell <david@slackware.com>
# Modified for PHP 4-5 by volkerdi@slackware.com
# Copyright 2007, 2008, 2009, 2010, 2011  Patrick Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Modified to work alongside Slackware's PHP by Peter Sevens <peter@sevensict.nl>
# Copyright 2012, 2013 Peter Sevens, Sevens ICT, all rights reserved.
# Note: this script is derived from Slackware64-13.37's php.SlackBuild.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


VERSION=5.3.6
ALPINE=2.00
BUILD=${BUILD:-1}
TAG=${TAG:-_7s}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

NUMJOBS=${NUMJOBS:-" -j7 "}

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-php53/
rm -rf $PKG
mkdir -p $TMP $PKG

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# we need to compile alpine to get c-client.a for IMAP support:
IMAPLIBDIR=/usr/local/lib${LIBDIRSUFFIX}/c-client
if [ -r $IMAPLIBDIR/lib${LIBDIRSUFFIX}/c-client.a ]; then
  echo "Using IMAP library:"
  ls -l $IMAPLIBDIR/lib${LIBDIRSUFFIX}/c-client.a
  sleep 5
else
  ( cd $CWD/../alpine ; ./alpine.SlackBuild || exit 1 ) || exit 1
  ( cd $TMP/alpine-${ALPINE}/imap/c-client
    strip -g c-client.a
    mkdir -p $IMAPLIBDIR/lib${LIBDIRSUFFIX}
    cp c-client.a $IMAPLIBDIR/lib${LIBDIRSUFFIX}
    mkdir -p $IMAPLIBDIR/include
    cp *.h $IMAPLIBDIR/include
  )
fi

# Apache module is disabled for now.  -- sevens
# mkdir -p $PKG/etc/httpd
mkdir -p $PKG/etc/php53
# A trick from DaMouse to enable building php into $PKG.
# We'll remove this later on.
# Apache module is disabled for now.  -- sevens
# cat /etc/httpd/original/httpd.conf > $PKG/etc/httpd/httpd.conf
# if [ ! -e /etc/httpd/original/httpd.conf ]; then
#   echo "FATAL:  no /etc/httpd/original/httpd.conf found."
#   exit 1
# fi

cd $TMP
rm -rf php-$VERSION
tar xvf $CWD/php-$VERSION.tar.?z* || exit 1
cd php-$VERSION

# cleanup:
find . -name "*.orig" -delete

# Add missing(?) PEAR modules back:
if [ -d php-$VERSION/pear/packages ]; then
  ( cd php-$VERSION/pear/packages
    cp -a $CWD/pear/*.bz2 . 2> /dev/null
    bzip2 -d *.bz2 2> /dev/null
  )
fi

if [ "$ARCH" = "s390" ]; then
  zcat $CWD/php.configure.s390.diff.gz | patch -p1 || exit
fi

# Fixup perms/owners:
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

find . -name "*.h" -exec chmod 644 {} \;

# Sometimes they ship a few of these:
find . -name "*.orig" -exec rm {} \;

# Patch ini files:
cat $CWD/php.ini-development.diff | patch -p1 --verbose || exit 1
cat $CWD/php.ini-development.diff | patch -p1 --verbose php.ini-production || exit 1
cat $CWD/php.session.save_path.diff | patch -p1 --verbose || exit 1

# Install the build folder into /usr/lib$LIBDIRSUFFIX/php/build
# and adapt phpize accordingly:
# NOTE: copied from Slackware 14.0's php.SlackBuild (PHP 5.4.x)  -- sevens
sed -i "s|build$|php/build|" scripts/Makefile.frag
sed -i "s|build\"$|php/build\"|" scripts/phpize.in

# Generic "kitchen sink" configure function, with as many things as possible (and
# maybe then some ;-) compiled as shared extensions.
#
# Some notable differences from Slackware's original build script (-- sevens):
#   * Isolate the installation into /opt/php53 (for now, get it working
#     first...).  Was: /usr
#     NOTE: did a s/\/usr/\/opt\/php53/ on --libdir too just to be sure, same
#           for $EXTENSION_DIR
#     NOTE: same modification is applied to commands with hard-coded paths
#           below
#   * Added a '53' suffix to all binaries so they're distinguishable from
#     Slackware's (esp. when both are in $PATH) and make them usable side by
#     side.
#     NOTE: same modification is applied to commands with hard-coded paths
#           below
#   * Explicitly omitted /etc/php from scandirs, don't want to mix stuff from
#     different PHP versions.  /etc/php is for Slackware's PHP version,
#     /etc/php53 for ours.
#   * TODO: find better name for the --with-config-file-scan-dir value.  Can't
#           be the same as --with-config-file-path, or php.ini gets parsed
#           twice (resulting at least in warnings about modules being
#           attempted to be loaded twice)!
php_configure() {
EXTENSION_DIR=/opt/php53/lib${LIBDIRSUFFIX}/php/extensions \
CFLAGS="$SLKCFLAGS" \
./configure \
  $* \
  --prefix=/opt/php53 \
  --libdir=/opt/php53/lib${LIBDIRSUFFIX} \
  --with-libdir=lib${LIBDIRSUFFIX} \
  --program-suffix=53 \
  --sysconfdir=/etc \
  --disable-safe-mode \
  --disable-magic-quotes \
  --enable-zend-multibyte \
  --enable-mbregex \
  --enable-tokenizer=shared \
  --with-config-file-scan-dir=/etc/php53/php \
  --with-config-file-path=/etc/php53 \
  --enable-mod_charset \
  --with-layout=PHP \
  --enable-sigchild \
  --enable-xml \
  --with-libxml-dir=/usr \
  --enable-simplexml \
  --enable-filter \
  --disable-debug \
  --with-openssl=shared \
  --with-pcre-regex=/usr \
  --with-zlib=shared,/usr \
  --enable-bcmath=shared \
  --with-bz2=shared,/usr \
  --enable-calendar=shared \
  --enable-ctype=shared \
  --with-curl=shared \
  --with-curlwrappers \
  --with-mcrypt=/usr \
  --enable-dba=shared \
  --with-gdbm=/usr \
  --with-db4=/usr \
  --enable-exif=shared \
  --enable-ftp=shared \
  --with-gd=shared \
  --with-jpeg-dir=/usr \
  --with-png-dir=/usr \
  --with-zlib-dir=/usr \
  --with-xpm-dir=/usr \
  --with-freetype-dir=/usr \
  --with-t1lib=/usr \
  --enable-gd-native-ttf \
  --enable-gd-jis-conv \
  --with-gettext=shared,/usr \
  --with-gmp=shared,/usr \
  --with-iconv=shared \
  --with-imap-ssl=/usr \
  --with-imap=$IMAPLIBDIR \
  --with-ldap=shared \
  --enable-mbstring=shared \
  --enable-hash \
  --with-mysql=shared,mysqlnd \
  --with-mysqli=shared,mysqlnd \
  --with-mysql-sock=/var/run/mysql/mysql.sock \
  --enable-pdo=shared \
  --with-pdo-mysql=shared,mysqlnd \
  --with-pdo-sqlite=shared,/usr \
  --with-pspell=shared,/usr \
  --with-enchant=shared,/usr \
  --enable-shmop=shared \
  --with-snmp=shared,/usr \
  --enable-soap=shared \
  --enable-sockets \
  --with-sqlite=shared \
  --with-sqlite3=shared \
  --enable-sqlite-utf8 \
  --with-regex=php \
  --enable-sysvmsg \
  --enable-sysvsem \
  --enable-sysvshm \
  --enable-wddx=shared \
  --with-xsl=shared,/usr \
  --enable-zip=shared \
  --with-tsrm-pthreads \
  --enable-shared=yes \
  --enable-static=no \
  --with-gnu-ld \
  --with-pic \
  --build=$ARCH-slackware-linux
}

# I am told this option is worse than nothing.  :-)
#  --enable-safe-mode
#
# I would recommend *against* and will take no responbility for turning on
# "safe" mode.

# PHP doesn't compile anymore with mm enabled on Slack 14 (complains about mm
# not being thread safe) and Slack 14's buildscript for PHP (5.4) has this
# removed too so it's probably safe...  -- sevens
#  --with-mm=/usr

# Make the Apache2 module version of PHP:
# Skip this, would conflict with Slackware's, CGI-only (for now).  -- sevens
# php_configure \
#   --with-apxs2=/usr/sbin/apxs
# make $NUMJOBS || make || exit 1
# make install INSTALL_ROOT=$PKG || exit 1

# Make the CLI/CGI version of PHP:
make distclean
php_configure \
  --enable-pcntl \
  --enable-sigchild
make $NUMJOBS || make || exit 1
# Added here, skipping Apache atm.  -- sevens
# 'make install' can fail with multiple jobs, enforce only one here.  -- sevens
make install INSTALL_ROOT=$PKG PHP_PEAR_SYSCONF_DIR=/etc/php53 -j1 || exit 1
# Installing in /opt (for now)  --sevens
mkdir -p $PKG/opt/php53/bin
# NOTE: why?  already in there...  Different version?
# Disabled for now, 'make install' has been moved to here, should probably take
# care of it.  -- sevens
# cat ./sapi/cli/php > $PKG/opt/php53/bin/php53
# cat ./sapi/cgi/php-cgi > $PKG/opt/php53/bin/php-cgi53
chmod 755 $PKG/opt/php53/bin/php53
chmod 755 $PKG/opt/php53/bin/php-cgi53

# Add file-suffix to those files in bin/ that PHP forgot...  -- sevens
mv $PKG/opt/php53/bin/pear $PKG/opt/php53/bin/pear53
mv $PKG/opt/php53/bin/peardev $PKG/opt/php53/bin/peardev53
mv $PKG/opt/php53/bin/pecl $PKG/opt/php53/bin/pecl53
mv $PKG/opt/php53/bin/phar $PKG/opt/php53/bin/phar53
# TODO: fix phar.phar too!  Needs adjusting of the phar symlink's target...

# PHP (used to) install Pear with some strange permissions.
# TODO: why no suffix??
chmod 755 $PKG/opt/php53/bin/pear53

# Make pear look for pear.conf in /etc/php53 instead of /etc.  -- sevens
# NOTE: solution taken from Debian Sid (PHP 5.4.4), they have pear.conf located
#       in /etc/pear/.  Located in debian/rules of the PHP source package.
# TODO: add line in target file with comment about modification too?
sed -i -re "s#('PEAR_CONFIG_SYSCONFDIR', PHP_SYSCONFDIR)#\1 . '/php53'#" $PKG/opt/php53/lib${LIBDIRSUFFIX}/php/PEAR/Config.php

# Make the scripts in bin/ use php53 as the binary name, not php...  -- sevens
# NOTE: phar is OK, it already shebangs the proper binary
sed -i -re "s#(/opt/php53/bin/php)#\153#" $PKG/opt/php53/bin/pear53 $PKG/opt/php53/bin/peardev53 $PKG/opt/php53/bin/pecl53
sed -i -re "s#(PHP=php)#\153#" $PKG/opt/php53/bin/pear53 $PKG/opt/php53/bin/peardev53 $PKG/opt/php53/bin/pecl53

# PHP sometimes puts junk in the root directory:
# WTF?  Got this in /opt/php53/lib64/php on last run (oh, and the whole dirs
# got created).  -- sevens
( cd $PKG
  rm -rf .channels .depdb .depdblock .filemap .lock .registry
)

# Fix $PKG/usr/lib/php perms:
( cd $PKG/opt/php53/lib${LIBDIRSUFFIX}/php
  find . \
   \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
   -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
   -exec chmod 644 {} \;
)

# TODO: should this be php53-... too?  Version is already in the dir itself.
#       Probably good to keep in sync with pkg name though
#       Hmm, Slack's db?? pkg's don't have this either (e.g. db42 has
#       /usr/doc/db-4.2.52).  Original name of the project doesn't change by
#       the fact that we use a different package name (i.e. it's still PHP,
#       version 5.3.x, not 'PHP53').
mkdir -p $PKG/usr/doc/php-$VERSION
cp -a \
  CODING_STANDARDS CREDITS EXTENSIONS INSTALL LICENSE NEWS README* TODO* UPGRADING* \
  sapi/cgi/README.FastCGI \
  $PKG/usr/doc/php-$VERSION
chown -R root:root $PKG/usr/doc/php-$VERSION
chmod 644 $PKG/usr/doc/php-$VERSION/UPGRADING*

# Provide default conf for Apache.  -- sevens
mkdir -p $PKG/etc/httpd/extra/
cat $CWD/cgi-php53.conf > $PKG/etc/httpd/extra/cgi-php53.conf
chmod 644 $PKG/etc/httpd $PKG/etc/httpd/extra
chown root:root $PKG/etc/httpd $PKG/etc/httpd/extra

mkdir -p $PKG/etc/php53
cp -a php.ini-development php.ini-production $PKG/etc/php53
# Apache module is disabled for now.  -- sevens
# cat $CWD/mod_php.conf.example | sed -e "s#lib/httpd#lib${LIBDIRSUFFIX}/httpd#" \
#   > $PKG/etc/httpd/mod_php.conf.example
chmod 644 $PKG/etc/php53/*
chown root:root $PKG/etc/php53/*

# Create base conf dir too
mkdir -p $PKG/etc/php53/php

# This can go now.
# Apache module is disabled for now.  -- sevens
# rm -f $PKG/etc/httpd/httpd*

# Session directory for PHP:
# TODO: suffix too?  Probably safer and more clear
mkdir -p $PKG/var/lib/php
chmod 770 $PKG/var/lib/php
chown root:apache $PKG/var/lib/php

# Strip ELF objects.
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

gzip -9 $PKG/opt/php53/man/man?/*.?

mkdir -p $PKG/install
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

#if [ -d "$IMAPLIBDIR" ]; then
#  ( cd $IMAPLIBDIR && rm -rf * )
#  rmdir $IMAPLIBDIR
#fi

cd $PKG
/sbin/makepkg -l y -c n $TMP/php53-$VERSION-$ARCH-$BUILD$TAG.txz

